server:
  port: 8085  # API Gateway runs on port 8085

spring:
  application:
    name: api-gateway
  main:
    allow-bean-definition-overriding: true
    web-application-type: reactive
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
  cloud:
    gateway:
      routes:
        - id: order-service
          uri: lb://ORDER-SERVICE
          predicates:
            - Path=/orders/**
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/users/**
        - id: gmail-services
          uri: lb://GMailService
          predicates:
            - Path=/Gmail/**
        - id: item-services
          uri: lb://ITEMS-SERVICE
          predicates:
            - Path=/items/**
        - id: Cart-Wishlist
          uri: lb://CART-SERVICES
          predicates:
            - Path=/Cart/**


eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/  # Use localhost Eureka Server
    register-with-eureka: true  # API Gateway should register itself
    fetch-registry: true  # Fetch services from Eureka

  instance:
    prefer-ip-address: true  # Register using IP instead of hostname
    ip-address: 127.0.0.1    # Explicitly set IP to localhost
    hostname: localhost      # Set hostname to localhost
    instance-id: ${spring.application.name}:${server.port}  # Ensures unique instance ID